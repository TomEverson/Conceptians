---
import { getUser } from "../pages/api/getUser";
import { getJwt } from "../pages/utils/getJwt";
const cookie = Astro.request.headers.get('cookie')

let logInfo;
let user;

if (cookie){
    logInfo = await getJwt(cookie)
    user = await getUser(logInfo.id)
}

---

<header class="hidden lg:block absolute md:h-screen w-[12vw] md:w-[4vw] border border-white z-20 duration-500 ease-in-out translate-x-[-100px]">
    <nav class="flex items-center justify-between flex-col h-screen py-[3vh]" id="navbar">
        <div class="logo" id="logo">
            <a href="https://conceptians.org/">
                <img class="mt-2" src="img/C-logo.png" alt="logo-image">
            </a>
             </div>
        <a class="profile flex-col items-center justify-center cursor-pointer no-underline hidden duration-500" id="profile" href={user? "../user" : "#"}>
            <img src={user? user.avatar : "img/none.png"} alt="user" class="border rounded-full w-[75px] h-auto">
            {user? 
            <p class="username mt-3 font-semibold text-2xl">
                {user.name}
                </p>
            :
           <div class="login items-center justify-center hidden xl:w-[200px] xl:h-[50px] lg:w-[150px] w-[100px] py-1 border rounded-full bg-fuchsia-400" id="login">
            <a href="../create-account" class="text-xl no-underline">
                Login
                </a>
            </div>
            }
        </a>
        <ul class="menu flex-col items-center mt-5 opacity-0 gap-12 no-underline" id="menu">            
            <div class="dropdown"><a rel="prefetch" href="../blogs/">Blogs</a>                     
                    </div>
            <div class="dropdown"><a>Clubs</a>
                </div>
            <div class="dropdown"><a>Podcasts</a>
                </div>
            <div class="dropdown"><a>Learn</a>
                </div>
            <div class="dropdown"><a>About Us</a>
                </div>
        </ul>
        <div class="hamburger" id="menu-button"><img id="hamburger" src="img/arrow.png" class="w-[20px] h-auto md:w-[30px]"></div>
    </nav>

</header>


<header class="block lg:hidden absolute w-screen bottom-0 left-0 border border-white z-20 overflow-hidden">
    <nav class="flex items-center justify-center flex-row w-screen h-[10vh]" id="navbar">
        <ul class="menu flex flex-row items-center justify-between w-[100%] no-underline" id="menu">            
            <div class="w-[15vw] h-full border dropdown flex justify-center"><a class="w-full" rel="prefetch" href="../blogs/"><img src="img/icon1.png"></a>                     
                </div>
            <div class="w-[15vw] h-full dropdown flex justify-center"><a><img class="w-full" src="img/icon2.png"></a>
                </div>
            <div class="w-[15vw] h-full dropdown flex justify-center"><a><img class="w-full" src="img/icon3.png"></a>
                </div>
            <div class="w-[15vw] h-full dropdown flex justify-center"><a><img class="w-full" src="img/icon4.png"></a>
                </div>
        </ul>
    </nav>

</header>




<style>


header{
    background: linear-gradient(102.44deg, #DEFFEB 9.56%, #DBEFFF 43.85%, #C1D5FB 78.56%);
}

.show{
    transform: translateX(0) !important;
    transform: translateY(0) !important;
    opacity: 1 !important;
}

.dropdown a, .username, .login a{
    font-family: 'Mulish', sans-serif;
}




</style>

<script is:inline>
    const header = document.querySelector('header')

    const menu_button = document.getElementById('menu-button');
    const menu = document.getElementById('menu');
    const hamburger = document.getElementById('hamburger');
    const logo = document.getElementById('logo')
    const profile = document.getElementById('profile')
    const login = document.getElementById('login')

    menu_button.addEventListener("click", function () {
        hamburger.classList.toggle('ham-slide')
        menu.classList.toggle('active')
        header.classList.toggle('slide')
        logo.classList.toggle('logo-slide')
        profile.classList.toggle('profile-show')
        login.classList.toggle('login-show')
    })

    const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
        entry.target.classList.toggle("show", entry.isIntersecting)
        if (entry.isIntersecting) observer.unobserve(entry.target)
    })
},{
    rootMargin: "300px"
})

    observer.observe(header)

</script>